
{
  "components": {
    "button": {
      "name": "button",
      "files": [
        {
          "name": "button.tsx",
          "content": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\nimport \"./button.css\"\n\nconst buttonVariants = cva(\"btn\", {\n  variants: {\n    variant: {\n      default: \"btn-default\",\n      destructive: \"btn-destructive\",\n      outline: \"btn-outline\",\n      secondary: \"btn-secondary\",\n      ghost: \"btn-ghost\",\n      link: \"btn-link\",\n    },\n    size: {\n      default: \"btn-size-default\",\n      sm: \"btn-size-sm\",\n      lg: \"btn-size-lg\",\n      icon: \"btn-size-icon\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n    size: \"default\",\n  },\n})\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }"
        },
        {
          "name": "button.css",
          "content": ".btn {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: var(--ig-size-100);\n  white-space: nowrap;\n  border-radius: var(--ig-border-radius);\n  font-size: var(--ig-font-size-body);\n  font-weight: var(--ig-font-weight-medium);\n  transition: all 0.2s ease;\n  border: var(--ig-border-width) solid transparent;\n  cursor: pointer;\n  outline: none;\n  font-family: var(--ig-font-family-body);\n}\n\n.btn:focus-visible {\n  box-shadow: var(--ig-box-shadow-focus);\n}\n\n.btn:disabled {\n  pointer-events: none;\n  opacity: var(--ig-opacity-disabled);\n}\n\n.btn svg {\n  pointer-events: none;\n  width: 1rem;\n  height: 1rem;\n  flex-shrink: 0;\n}\n\n/* Variants */\n.btn-default {\n  background-color: var(--ig-background-primary-bold);\n  color: var(--ig-text-on-color);\n}\n\n.btn-default:hover {\n  background-color: var(--ig-background-primary-bold-hover);\n}\n\n.btn-default:active {\n  background-color: var(--ig-background-primary-bold-pressed);\n}\n\n.btn-destructive {\n  background-color: var(--ig-background-error-bold);\n  color: var(--ig-text-on-color);\n}\n\n.btn-destructive:hover {\n  background-color: var(--ig-background-error-bold-hover);\n}\n\n.btn-destructive:active {\n  background-color: var(--ig-background-error-bold-pressed);\n}\n\n.btn-outline {\n  border: var(--ig-border-width) solid var(--ig-border);\n  background-color: var(--ig-background-neutral);\n  color: var(--ig-text-bold);\n}\n\n.btn-outline:hover {\n  background-color: var(--ig-background-neutral-hover);\n  border-color: var(--ig-border-bold);\n}\n\n.btn-outline:active {\n  background-color: var(--ig-background-neutral-pressed);\n}\n\n.btn-secondary {\n  background-color: var(--ig-background-secondary-bold);\n  color: var(--ig-text-on-color);\n}\n\n.btn-secondary:hover {\n  background-color: var(--ig-background-secondary-bold-hover);\n}\n\n.btn-secondary:active {\n  background-color: var(--ig-background-secondary-bold-pressed);\n}\n\n.btn-ghost {\n  color: var(--ig-text-bold);\n  background-color: transparent;\n}\n\n.btn-ghost:hover {\n  background-color: var(--ig-background-neutral-hover);\n}\n\n.btn-ghost:active {\n  background-color: var(--ig-background-neutral-pressed);\n}\n\n.btn-link {\n  color: var(--ig-text-primary);\n  text-decoration: var(--ig-text-decoration-link);\n  text-underline-offset: 4px;\n  background-color: transparent;\n}\n\n.btn-link:hover {\n  color: var(--ig-text-primary-hover);\n  text-decoration: var(--ig-text-decoration-link);\n}\n\n.btn-link:active {\n  color: var(--ig-text-primary-pressed);\n}\n\n/* Sizes */\n.btn-size-default {\n  height: var(--ig-component-size-large);\n  padding: 0 var(--ig-size-200);\n}\n\n.btn-size-sm {\n  height: var(--ig-component-size-medium);\n  border-radius: var(--ig-border-radius);\n  padding: 0 var(--ig-size-150);\n  font-size: var(--ig-font-size-body-small);\n}\n\n.btn-size-lg {\n  height: var(--ig-component-size-xlarge);\n  border-radius: var(--ig-border-radius);\n  padding: 0 var(--ig-size-400);\n  font-size: var(--ig-font-size-body-large);\n}\n\n.btn-size-icon {\n  height: var(--ig-component-size-large);\n  width: var(--ig-component-size-large);\n}"
        }
      ],
      "dependencies": ["@radix-ui/react-slot", "class-variance-authority"]
    },
    "card": {
      "name": "card",
      "files": [
        {
          "name": "card.tsx",
          "content": "import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\nimport \"./card.css\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"card\", className)}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"card-header\", className)} {...props} />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\"card-title\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"card-description\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"card-content\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"card-footer\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }"
        },
        {
          "name": "card.css",
          "content": ".card {\n  border-radius: var(--ig-border-radius-large);\n  border: var(--ig-border-width) solid var(--ig-border);\n  background-color: var(--ig-background-neutral);\n  color: var(--ig-text-bold);\n  box-shadow: var(--ig-elevation-level-1);\n}\n\n.card-header {\n  display: flex;\n  flex-direction: column;\n  gap: var(--ig-size-100);\n  padding: var(--ig-size-300);\n}\n\n.card-title {\n  font: var(--ig-typography-heading-small-bold);\n  margin: 0;\n}\n\n.card-description {\n  font: var(--ig-typography-body-medium-regular);\n  color: var(--ig-text-subtle);\n  margin: 0;\n}\n\n.card-content {\n  padding: var(--ig-size-300);\n  padding-top: 0;\n}\n\n.card-footer {\n  display: flex;\n  align-items: center;\n  padding: var(--ig-size-300);\n  padding-top: 0;\n}"
        }
      ],
      "dependencies": []
    },
    "input": {
      "name": "input",
      "files": [
        {
          "name": "input.tsx",
          "content": "import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\nimport \"./input.css\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\"input\", className)}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }"
        },
        {
          "name": "input.css",
          "content": ".input {\n  display: flex;\n  height: var(--ig-component-size-large);\n  width: 100%;\n  border-radius: var(--ig-border-radius-input);\n  border: var(--ig-border-width-input) solid var(--ig-border);\n  background-color: var(--ig-background-neutral);\n  padding: var(--ig-component-input-medium-vertical-padding) var(--ig-component-input-medium-horizontal-padding);\n  font: var(--ig-typography-body-medium-regular);\n  transition: all 0.2s ease;\n  outline: none;\n  color: var(--ig-text-bold);\n}\n\n.input::placeholder {\n  color: var(--ig-text-subtler);\n}\n\n.input:focus-visible {\n  box-shadow: var(--ig-box-shadow-focus);\n  border-color: var(--ig-border-focus);\n}\n\n.input:disabled {\n  cursor: not-allowed;\n  opacity: var(--ig-opacity-disabled);\n  background-color: var(--ig-background-neutral-subtler);\n}\n\n.input::file-selector-button {\n  border: 0;\n  background-color: transparent;\n  font: var(--ig-typography-body-small-medium);\n  color: var(--ig-text-bold);\n}\n\n@media (min-width: 768px) {\n  .input {\n    font-size: var(--ig-font-size-body-small);\n  }\n}"
        }
      ],
      "dependencies": []
    },
    "badge": {
      "name": "badge",
      "files": [
        {
          "name": "badge.tsx",
          "content": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\nimport \"./badge.css\"\n\nconst badgeVariants = cva(\"badge\", {\n  variants: {\n    variant: {\n      default: \"badge-default\",\n      secondary: \"badge-secondary\",\n      destructive: \"badge-destructive\",\n      outline: \"badge-outline\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n  },\n})\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }"
        },
        {
          "name": "badge.css",
          "content": ".badge {\n  display: inline-flex;\n  align-items: center;\n  border-radius: 9999px;\n  border: var(--ig-border-width) solid;\n  padding: var(--ig-size-025) var(--ig-size-150);\n  font: var(--ig-typography-caption-medium-bold);\n  transition: all 0.2s ease;\n  outline: none;\n}\n\n.badge:focus {\n  box-shadow: var(--ig-box-shadow-focus);\n}\n\n.badge-default {\n  border-color: transparent;\n  background-color: var(--ig-background-primary-bold);\n  color: var(--ig-text-on-color);\n}\n\n.badge-default:hover {\n  background-color: var(--ig-background-primary-bold-hover);\n}\n\n.badge-secondary {\n  border-color: transparent;\n  background-color: var(--ig-background-secondary-bold);\n  color: var(--ig-text-on-color);\n}\n\n.badge-secondary:hover {\n  background-color: var(--ig-background-secondary-bold-hover);\n}\n\n.badge-destructive {\n  border-color: transparent;\n  background-color: var(--ig-background-error-bold);\n  color: var(--ig-text-on-color);\n}\n\n.badge-destructive:hover {\n  background-color: var(--ig-background-error-bold-hover);\n}\n\n.badge-outline {\n  color: var(--ig-text-bold);\n  border-color: var(--ig-border);\n  background-color: transparent;\n}\n\n.badge-outline:hover {\n  background-color: var(--ig-background-neutral-hover);\n}"
        }
      ],
      "dependencies": ["class-variance-authority"]
    }
  }
}
